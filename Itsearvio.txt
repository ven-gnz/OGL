
SART - smart ar tool for aircraft production,  uses tablet with a camera. Early detection of non conformities.
Reduces inspection time from 15 -> 3 days. Main use case is the inspection of installed parts
Uses tablet and qr codes

Industrial projects 1:

MARIN - mobile augmented reality tool for marine industry
visualize plans during construction - easily seen at one glance, easier to interpret
no need to carry printed plans
Efficient inspection and documentation
improved efficienct, reduced construction error as well as time
Uses tablet
virtual notes superceding the chalk markings - not painted over, provide more accesibility
documentation tool : hole request offers needed flexibility to parallel running build & plan processes
while helping stay informed about structural integrity
inspections on planning phase : conforming to code
inspections during operational life : wear and tear


MARIN2 - Mobile mixed reality applications for professional use
Extended focus to building construction & other industries



Projects 2:

MARIN2 - VR:
SHIPVR VR visualization of a two layer store
BRIDGEVR - visualization for construction for infrastructure - assests were donwloaded from server so CI/CD of metada, assets, etc can be observed in regards to latest versions
Free movement in the area which could create nausea
MARIN2 - AR:
positioning models into the real world with panorama maps and standard tablets
INDOOR AR : maintenance and service information from database for on site maintenance tasks

3D models are too large to be handled in mobile devices, divide et impera or simplify - preservation of geometry


Projets 3: virtual sea trial video see trough

VST XR - present VST partners with capabilites of modern pass through XR, and
Oscilloscope tutorial, cabling tutorial

Purely virtual vs 

eShare XR - Frontend
selecting and editing in real time. Model data streamed through internet and in binary format, so a clever way to circumvent the model loading computational complexity ?

VR education and training:
VR BUS training
Necessary checks to a bus before starting
Provides data, immedieate feedback, more immersive and haptile and tactical feedback on training

VR connection schools:
A platform for teachers and students creating the content themselves focused on studying and building bridges between separating geographical factors

VR design in reviews:
Use of VR to hold meetings and generate interiors based on mockups for keeping shareholders in the loop of the whole process


Pick a couple of the example applications presented in the videos and compare their differences. How do e.g. the usage environments affect the technology solutions, how do the user experiences differ?


In education, a big part of the business model of the application is providing a platform. In this platfor, the teachers and students sort of generate the content for themselves, and creating the content together is a key factor. It is the polar opposite of industry grade shipbuilding, where we need factual data and the question in there then becomes how to create accurate representations while being mindful of tecnical limitations.


In MARIN for example, the device used is tablet so the app is clearly more based on reality hence it is an augmented reality app. On the videos, they demonstrated hole requesting for example with quite accurate estimations, where the application would inform on the possible structural integrity violations of the hole. Also in the videos it was mentioned that accurate modeling contains so much data that some clever solutions have to be used. So accuracy is given a prime.

Whereas with the education platform, fun and immersion are given a prime. Having a 1 to 1 avatar is not going to make or break the experience. Also the content might be also given the benefit of the doubt as to for example historical or architectonic accuracies. Goal of the app is to learn and interact, and therefore giving users more leeway in showing their handprint in the program, regardless of how plausible it is, is a key value.


What kind of technical requirements are there for equipment used in industrial conditions? What requirements are there from the user experience point of view? Compared to those apps made for e.g. cultural heritage or entertainment purposes, how do the requirements differ?

The technical requirements play a bigger role. With cultural heritage application, no one will die if a character gets misplaced. But an error in a critical components eg boat load bearing structures can leads to loss of millions having to rebuild the whole thing, in the worst case. The accuracy goes hand in hand with the use case.

Cultural heritage applications were made from historians and developers to laypeople, so some historical inaccuracies were ok. As discussed on previous weeks, some educated guesses were ok. But grade A industrial applications have maybe even mathematical error margins, epsilons, over how much inaccuracies can be present as well as what kind of cumulating error can be tolerated. No system is perfect, but if the app deviates too much from the allotted margins, it becames unusable.

This naturally is a challenge with limited computational power or AR devices. This was solved in the videos by simplifying geometry, as well as delivering parts of the models via internet or some other remote access ad hoc. This gave the MARIN for example a good forum also for storing all the digital notes which in a physical world would be painted over for example.



Compare content creation for industrial MR applications vs. culture-oriented and entertainment applications. What essential differences do you see? How do the needs for data connections and storage differ? What is causing the differences?

Extending on the topics of the previous essay, the accuracy and use case going hand in hand is clearly a big thing. In an industrial context, the feedback loop and iterative nature might be more prevalent in the development process. Also the added accuracy poses new challenges with limited computational power of handhelds, and typically creates the need of forums for multiple users to share their design and building data for example.

Briefly mentioned in one of the videos was continuous delivery of the most current version of the assets. This was handled by loading the most current version via cloud. This quite naturally creates a new problem of needing version controls and handling merging of different versions - is a sketch with an old model automatically fully compatible with a newer one? This also poses the concurrency issue - if someone is editing the same things in the plan, how are these handled? In software context we would call these merge conflicts.

So the idea of simply loading the newest asset is not a silver bullet. It is a great addition. But this does require thinking the distribution as well - are multiple hot reloads supported? Streaming megabytes of data in real time to multiple devices is not a trivial task, and I argue that also the networking side can prove problematic on as real time as possible model swaps for example.

The differences are caused by static vs dynamic use cases of the app. During cultural heritage app development, these kinds of problems are typically handled via robust project management. But the consumer producer problem is more prevalent in the more accuracy driven, latest version needing applications.